<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.courseerpbackend.repository.UserRepository">

<!--    value names must be same as the fields of UserRepository-->
<!--    to return id of inserted user, use useGeneratedKeys="true" keyColumn="id" keyProperty="id"-->
    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO users (name, surname, status, role_id, email, phone_number, password)
        VALUES (#{name}, #{surname}, #{status}, #{roleId}, #{email}, #{phoneNumber}, #{password})
    </insert>

    <update id="update" parameterType="User">
        UPDATE users u
        SET name = #{name}, surname = #{surname}, status = #{status},
            role_id = #{roleId}, email = #{email}, phone_number = #{phoneNumber}
        WHERE u.id = #{id}
    </update>

    <!-- resultType shows models whose location is represented by type-aliases-package in application.yml file -->
    <select id="findByEmail" resultType="User">
        SELECT
            <include refid="userBaseColumns"/>
        FROM users u
        WHERE u.email = #{email}
          AND u.is_deleted =false
    </select>

    <select id="findById" resultType="User">
        SELECT
            <include refid="userBaseColumns"/>
        FROM users u
        WHERE u.id = #{id}
          AND u.is_deleted =false
    </select>

    <select id="findByPhoneNumber" resultType="User">
        SELECT
            <include refid="userBaseColumns"/>
        FROM users u
        WHERE u.phone_number = #{phoneNumber}
        AND u.is_deleted = false
    </select>

    <!-- SQL fragment -->
    <sql id="userBaseColumns">
        u.id,
        u.name,
        u.surname,
        u.status,
        u.role_id,
        u.email,
        u.phone_number,
        u.password,
        u.is_deleted
    </sql>

</mapper>
